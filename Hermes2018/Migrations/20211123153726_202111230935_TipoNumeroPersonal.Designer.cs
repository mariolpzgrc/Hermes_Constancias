// <auto-generated />
using System;
using Hermes2018.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hermes2018.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211123153726_202111230935_TipoNumeroPersonal")]
    partial class _202111230935_TipoNumeroPersonal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hermes2018.Models.Anexo.HER_Anexo", b =>
                {
                    b.Property<int>("HER_AnexoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HER_Tipo");

                    b.HasKey("HER_AnexoId");

                    b.ToTable("HER_Anexo");
                });

            modelBuilder.Entity("Hermes2018.Models.Anexo.HER_AnexoArchivo", b =>
                {
                    b.Property<int>("HER_AnexoArchivoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HER_AnexoId");

                    b.Property<int?>("HER_AnexoRutaId");

                    b.Property<string>("HER_Nombre");

                    b.Property<string>("HER_RutaComplemento");

                    b.Property<string>("HER_TipoContenido");

                    b.HasKey("HER_AnexoArchivoId");

                    b.HasIndex("HER_AnexoId");

                    b.HasIndex("HER_AnexoRutaId");

                    b.ToTable("HER_AnexoArchivo");
                });

            modelBuilder.Entity("Hermes2018.Models.Anexo.HER_AnexoArea", b =>
                {
                    b.Property<int>("HER_AnexoAreaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HER_AnexoRutaId");

                    b.Property<string>("HER_Nombre");

                    b.Property<string>("HER_RutaComplemento");

                    b.Property<string>("HER_TipoContenido");

                    b.HasKey("HER_AnexoAreaId");

                    b.HasIndex("HER_AnexoRutaId");

                    b.ToTable("HER_AnexoArea");
                });

            modelBuilder.Entity("Hermes2018.Models.Anexo.HER_AnexoGeneral", b =>
                {
                    b.Property<int>("HER_AnexoGeneralId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HER_Nombre");

                    b.Property<string>("HER_RutaComplemento");

                    b.Property<string>("HER_TipoContenido");

                    b.Property<int>("HER_TipoRegistro");

                    b.HasKey("HER_AnexoGeneralId");

                    b.ToTable("HER_AnexoGeneral");
                });

            modelBuilder.Entity("Hermes2018.Models.Anexo.HER_AnexoRuta", b =>
                {
                    b.Property<int>("HER_AnexoRutaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HER_Estado");

                    b.Property<DateTime>("HER_FechaActualizacion");

                    b.Property<DateTime>("HER_FechaRegistro");

                    b.Property<string>("HER_RutaBase");

                    b.HasKey("HER_AnexoRutaId");

                    b.ToTable("HER_AnexoRuta");
                });

            modelBuilder.Entity("Hermes2018.Models.Area.HER_Area", b =>
                {
                    b.Property<int>("HER_AreaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HER_Area_PadreId");

                    b.Property<string>("HER_Clave");

                    b.Property<int>("HER_DiasCompromiso");

                    b.Property<string>("HER_Direccion");

                    b.Property<int>("HER_Estado");

                    b.Property<bool>("HER_ExisteEnSIIU");

                    b.Property<int?>("HER_LogoId");

                    b.Property<string>("HER_Nombre");

                    b.Property<int>("HER_RegionId");

                    b.Property<string>("HER_Telefono");

                    b.Property<bool>("HER_Visible");

                    b.HasKey("HER_AreaId");

                    b.HasIndex("HER_Area_PadreId");

                    b.HasIndex("HER_LogoId");

                    b.HasIndex("HER_RegionId");

                    b.ToTable("HER_Area");
                });

            modelBuilder.Entity("Hermes2018.Models.Area.HER_Region", b =>
                {
                    b.Property<int>("HER_RegionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HER_Nombre");

                    b.HasKey("HER_RegionId");

                    b.ToTable("HER_Region");
                });

            modelBuilder.Entity("Hermes2018.Models.Calendario.HER_Calendario", b =>
                {
                    b.Property<int>("HER_CalendarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HER_Anio");

                    b.Property<string>("HER_Titulo");

                    b.HasKey("HER_CalendarioId");

                    b.ToTable("HER_Calendario");
                });

            modelBuilder.Entity("Hermes2018.Models.Calendario.HER_CalendarioContenido", b =>
                {
                    b.Property<int>("HER_CalendarioContenidoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HER_CalendarioId");

                    b.Property<int>("HER_Dia");

                    b.Property<DateTime>("HER_Fecha");

                    b.Property<int>("HER_Mes");

                    b.HasKey("HER_CalendarioContenidoId");

                    b.HasIndex("HER_CalendarioId");

                    b.ToTable("HER_CalendarioContenido");
                });

            modelBuilder.Entity("Hermes2018.Models.Carpeta.HER_Carpeta", b =>
                {
                    b.Property<int>("HER_CarpetaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HER_CarpetaPadreId");

                    b.Property<DateTime>("HER_FechaActualizacion");

                    b.Property<DateTime>("HER_FechaRegistro");

                    b.Property<int>("HER_InfoUsuarioId");

                    b.Property<int>("HER_Nivel");

                    b.Property<string>("HER_Nombre");

                    b.HasKey("HER_CarpetaId");

                    b.HasIndex("HER_CarpetaPadreId");

                    b.HasIndex("HER_InfoUsuarioId");

                    b.ToTable("HER_Carpeta");
                });

            modelBuilder.Entity("Hermes2018.Models.Categoria.HER_Categoria", b =>
                {
                    b.Property<int>("HER_CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HER_InfoUsuarioId");

                    b.Property<string>("HER_Nombre");

                    b.Property<int>("HER_Tipo");

                    b.HasKey("HER_CategoriaId");

                    b.HasIndex("HER_InfoUsuarioId");

                    b.ToTable("HER_Categoria");
                });

            modelBuilder.Entity("Hermes2018.Models.Categoria.HER_CategoriaDocumento", b =>
                {
                    b.Property<int>("HER_CategoriaDocumentoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HER_CategoriaId");

                    b.Property<int>("HER_DocumentoId");

                    b.HasKey("HER_CategoriaDocumentoId");

                    b.HasIndex("HER_CategoriaId");

                    b.HasIndex("HER_DocumentoId");

                    b.ToTable("HER_CategoriaDocumento");
                });

            modelBuilder.Entity("Hermes2018.Models.Categoria.HER_CategoriaDocumentoBase", b =>
                {
                    b.Property<int>("HER_CategoriaDocumentoBaseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HER_CategoriaId");

                    b.Property<int>("HER_DocumentoBaseId");

                    b.HasKey("HER_CategoriaDocumentoBaseId");

                    b.HasIndex("HER_CategoriaId");

                    b.HasIndex("HER_DocumentoBaseId");

                    b.ToTable("HER_CategoriaDocumentoBase");
                });

            modelBuilder.Entity("Hermes2018.Models.Configuracion.HER_Color", b =>
                {
                    b.Property<int>("HER_ColorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HER_Codigo");

                    b.Property<string>("HER_Nombre");

                    b.HasKey("HER_ColorId");

                    b.ToTable("HER_Color");
                });

            modelBuilder.Entity("Hermes2018.Models.Configuracion.HER_Configuracion", b =>
                {
                    b.Property<int>("HER_ConfiguracionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HER_Propiedad");

                    b.Property<string>("HER_Valor");

                    b.HasKey("HER_ConfiguracionId");

                    b.ToTable("HER_Configuracion");
                });

            modelBuilder.Entity("Hermes2018.Models.Configuracion.HER_ConfiguracionUsuario", b =>
                {
                    b.Property<int>("HER_ConfiguracionUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HER_ColorId");

                    b.Property<int>("HER_ElementosPorPagina");

                    b.Property<bool>("HER_Notificaciones");

                    b.Property<string>("HER_UsuarioId");

                    b.HasKey("HER_ConfiguracionUsuarioId");

                    b.HasIndex("HER_ColorId");

                    b.HasIndex("HER_UsuarioId");

                    b.ToTable("HER_ConfiguracionUsuario");
                });

            modelBuilder.Entity("Hermes2018.Models.Configuracion.HER_Extension", b =>
                {
                    b.Property<int>("HER_ExtensionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HER_Nombre");

                    b.HasKey("HER_ExtensionId");

                    b.ToTable("HER_Extension");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_Cancelado", b =>
                {
                    b.Property<int>("HER_CanceladoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HER_EnvioId");

                    b.Property<DateTime>("HER_Fecha");

                    b.Property<string>("HER_Motivo");

                    b.HasKey("HER_CanceladoId");

                    b.HasIndex("HER_EnvioId")
                        .IsUnique();

                    b.ToTable("HER_Cancelado");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_Compromiso", b =>
                {
                    b.Property<int>("HER_CompromisoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HER_Estado");

                    b.Property<DateTime>("HER_Fecha");

                    b.Property<string>("HER_Motivo");

                    b.Property<int>("HER_RecepcionId");

                    b.Property<DateTime>("HER_Registro");

                    b.Property<int>("HER_Tipo");

                    b.HasKey("HER_CompromisoId");

                    b.HasIndex("HER_RecepcionId");

                    b.ToTable("HER_Compromiso");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_Destinatario", b =>
                {
                    b.Property<int>("HER_DestinatarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HER_DocumentoBaseId");

                    b.Property<int>("HER_Tipo");

                    b.Property<int>("HER_UDestinatarioId");

                    b.HasKey("HER_DestinatarioId");

                    b.HasIndex("HER_DocumentoBaseId");

                    b.HasIndex("HER_UDestinatarioId");

                    b.ToTable("HER_Destinatario");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_Documento", b =>
                {
                    b.Property<int>("HER_DocumentoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HER_Asunto");

                    b.Property<string>("HER_Cuerpo");

                    b.Property<int>("HER_DocumentoCreadorId");

                    b.Property<int>("HER_DocumentoTitularId");

                    b.Property<DateTime>("HER_FechaRegistro");

                    b.Property<string>("HER_Firma");

                    b.Property<string>("HER_Folio");

                    b.Property<string>("HER_NoInterno");

                    b.Property<int>("HER_TipoId");

                    b.HasKey("HER_DocumentoId");

                    b.HasIndex("HER_DocumentoCreadorId");

                    b.HasIndex("HER_DocumentoTitularId");

                    b.HasIndex("HER_TipoId");

                    b.ToTable("HER_Documento");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_DocumentoBase", b =>
                {
                    b.Property<int>("HER_DocumentoBaseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HER_AnexoId");

                    b.Property<string>("HER_Asunto");

                    b.Property<string>("HER_Cuerpo");

                    b.Property<int>("HER_DocumentoBaseCreadorId");

                    b.Property<int>("HER_DocumentoBaseTitularId");

                    b.Property<bool>("HER_EnRevision");

                    b.Property<int>("HER_EstadoId");

                    b.Property<DateTime>("HER_FechaPropuesta");

                    b.Property<DateTime>("HER_FechaRegistro");

                    b.Property<string>("HER_Folio");

                    b.Property<int>("HER_ImportanciaId");

                    b.Property<string>("HER_NoInterno");

                    b.Property<bool>("HER_RequiereRespuesta");

                    b.Property<int>("HER_TipoId");

                    b.Property<int>("HER_VisibilidadId");

                    b.HasKey("HER_DocumentoBaseId");

                    b.HasIndex("HER_AnexoId")
                        .IsUnique()
                        .HasFilter("[HER_AnexoId] IS NOT NULL");

                    b.HasIndex("HER_DocumentoBaseCreadorId");

                    b.HasIndex("HER_DocumentoBaseTitularId");

                    b.HasIndex("HER_EstadoId");

                    b.HasIndex("HER_ImportanciaId");

                    b.HasIndex("HER_TipoId");

                    b.HasIndex("HER_VisibilidadId");

                    b.ToTable("HER_DocumentoBase");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_Envio", b =>
                {
                    b.Property<int>("HER_EnvioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HER_AnexoId");

                    b.Property<int?>("HER_CarpetaId");

                    b.Property<string>("HER_DeDireccion");

                    b.Property<int>("HER_DeId");

                    b.Property<string>("HER_DeTelefono");

                    b.Property<int>("HER_DocumentoId");

                    b.Property<int?>("HER_EnvioPadreId");

                    b.Property<bool>("HER_EsReenvio");

                    b.Property<int>("HER_EstadoEnvioId");

                    b.Property<DateTime>("HER_FechaEnvio");

                    b.Property<DateTime>("HER_FechaPropuesta");

                    b.Property<int>("HER_GrupoEnvio");

                    b.Property<int>("HER_ImportanciaId");

                    b.Property<string>("HER_Indicaciones");

                    b.Property<int>("HER_Orden");

                    b.Property<bool>("HER_RequiereRespuesta");

                    b.Property<int>("HER_TipoEnvioId");

                    b.Property<int>("HER_TotalCCP");

                    b.Property<int>("HER_TotalCCPRespuestas");

                    b.Property<int>("HER_TotalPara");

                    b.Property<int>("HER_TotalParaRespuestas");

                    b.Property<int?>("HER_TramiteId");

                    b.Property<int>("HER_UsuarioEnviaId");

                    b.Property<int?>("HER_UsuarioOrigenId");

                    b.Property<int>("HER_VisibilidadId");

                    b.HasKey("HER_EnvioId");

                    b.HasIndex("HER_AnexoId");

                    b.HasIndex("HER_CarpetaId");

                    b.HasIndex("HER_DeId");

                    b.HasIndex("HER_DocumentoId");

                    b.HasIndex("HER_EnvioPadreId");

                    b.HasIndex("HER_EstadoEnvioId");

                    b.HasIndex("HER_ImportanciaId");

                    b.HasIndex("HER_TipoEnvioId");

                    b.HasIndex("HER_TramiteId");

                    b.HasIndex("HER_UsuarioEnviaId");

                    b.HasIndex("HER_UsuarioOrigenId");

                    b.HasIndex("HER_VisibilidadId");

                    b.ToTable("HER_Envio");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_EnvioRevision", b =>
                {
                    b.Property<int>("HER_EnvioRevisionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HER_DocumentoBaseId");

                    b.Property<int>("HER_EstadoDestinatario");

                    b.Property<int>("HER_EstadoRemitente");

                    b.Property<DateTime>("HER_Fecha");

                    b.Property<int>("HER_RevisionDestinatarioId");

                    b.Property<int>("HER_RevisionRemitenteId");

                    b.HasKey("HER_EnvioRevisionId");

                    b.HasIndex("HER_DocumentoBaseId");

                    b.HasIndex("HER_RevisionDestinatarioId");

                    b.HasIndex("HER_RevisionRemitenteId");

                    b.ToTable("HER_EnvioRevision");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_EstadoDocumento", b =>
                {
                    b.Property<int>("HER_EstadoDocumentoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HER_Nombre");

                    b.HasKey("HER_EstadoDocumentoId");

                    b.ToTable("HER_EstadoDocumento");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_EstadoEnvio", b =>
                {
                    b.Property<int>("HER_EstadoEnvioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HER_Nombre");

                    b.HasKey("HER_EstadoEnvioId");

                    b.ToTable("HER_EstadoEnvio");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_HistorialCorreo", b =>
                {
                    b.Property<int>("HER_HistorialCorreoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HER_Delegado");

                    b.Property<string>("HER_Destinatario");

                    b.Property<int>("HER_EnvioId");

                    b.Property<DateTime>("HER_Fecha");

                    b.Property<int>("HER_InfoUsuarioId");

                    b.Property<int>("HER_Tipo");

                    b.Property<int>("HER_TipoEnvio");

                    b.HasKey("HER_HistorialCorreoId");

                    b.HasIndex("HER_EnvioId");

                    b.HasIndex("HER_InfoUsuarioId");

                    b.ToTable("HER_HistorialCorreo");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_Importancia", b =>
                {
                    b.Property<int>("HER_ImportanciaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HER_Nombre");

                    b.HasKey("HER_ImportanciaId");

                    b.ToTable("HER_Importancia");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_Recepcion", b =>
                {
                    b.Property<int>("HER_RecepcionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HER_CarpetaId");

                    b.Property<int>("HER_EnvioId");

                    b.Property<bool>("HER_EstaLeido");

                    b.Property<int>("HER_EstadoEnvioId");

                    b.Property<DateTime>("HER_FechaRecepcion");

                    b.Property<int>("HER_ParaId");

                    b.Property<bool>("HER_TieneRespuesta");

                    b.Property<int>("HER_TipoPara");

                    b.HasKey("HER_RecepcionId");

                    b.HasIndex("HER_CarpetaId");

                    b.HasIndex("HER_EnvioId");

                    b.HasIndex("HER_EstadoEnvioId");

                    b.HasIndex("HER_ParaId");

                    b.ToTable("HER_Recepcion");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_RecepcionCategoria", b =>
                {
                    b.Property<int>("HER_RecepcionCategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HER_CategoriaId");

                    b.Property<int>("HER_RecepcionId");

                    b.HasKey("HER_RecepcionCategoriaId");

                    b.HasIndex("HER_CategoriaId");

                    b.HasIndex("HER_RecepcionId");

                    b.ToTable("HER_RecepcionCategoria");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_TipoDocumento", b =>
                {
                    b.Property<int>("HER_TipoDocumentoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HER_Nombre");

                    b.HasKey("HER_TipoDocumentoId");

                    b.ToTable("HER_TipoDocumento");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_TipoEnvio", b =>
                {
                    b.Property<int>("HER_TipoEnvioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HER_Nombre");

                    b.HasKey("HER_TipoEnvioId");

                    b.ToTable("HER_TipoEnvio");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_Visibilidad", b =>
                {
                    b.Property<int>("HER_VisibilidadId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HER_Nombre");

                    b.HasKey("HER_VisibilidadId");

                    b.ToTable("HER_Visibilidad");
                });

            modelBuilder.Entity("Hermes2018.Models.Grupo.HER_Grupo", b =>
                {
                    b.Property<int>("HER_GrupoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HER_CreadorId");

                    b.Property<string>("HER_Nombre");

                    b.HasKey("HER_GrupoId");

                    b.HasIndex("HER_CreadorId");

                    b.ToTable("HER_Grupo");
                });

            modelBuilder.Entity("Hermes2018.Models.Grupo.HER_GrupoIntegrante", b =>
                {
                    b.Property<int>("HER_GrupoIntegranteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HER_GrupoId");

                    b.Property<int>("HER_IntegranteId");

                    b.HasKey("HER_GrupoIntegranteId");

                    b.HasIndex("HER_GrupoId");

                    b.HasIndex("HER_IntegranteId");

                    b.ToTable("HER_GrupoIntegrante");
                });

            modelBuilder.Entity("Hermes2018.Models.HER_Delegar", b =>
                {
                    b.Property<int>("HER_DelegarId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HER_DelegadoId");

                    b.Property<DateTime>("HER_FechaActualizacion");

                    b.Property<DateTime>("HER_FechaRegistro");

                    b.Property<int>("HER_Tipo");

                    b.Property<int>("HER_TitularId");

                    b.HasKey("HER_DelegarId");

                    b.HasIndex("HER_DelegadoId");

                    b.HasIndex("HER_TitularId");

                    b.ToTable("HER_Delegar");
                });

            modelBuilder.Entity("Hermes2018.Models.HER_InfoUsuario", b =>
                {
                    b.Property<int>("HER_InfoUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HER_Activo");

                    b.Property<int>("HER_AreaId");

                    b.Property<string>("HER_BandejaNombre");

                    b.Property<int>("HER_BandejaPermiso");

                    b.Property<string>("HER_BandejaUsuario");

                    b.Property<string>("HER_Correo");

                    b.Property<string>("HER_Direccion");

                    b.Property<bool>("HER_EsUnico");

                    b.Property<bool>("HER_EstaEnBajaDefinitiva");

                    b.Property<bool>("HER_EstaEnReasignacion");

                    b.Property<DateTime>("HER_FechaActualizacion");

                    b.Property<DateTime>("HER_FechaRegistro");

                    b.Property<string>("HER_NombreCompleto");

                    b.Property<string>("HER_NumeroPersonal");

                    b.Property<bool>("HER_PermisoAA");

                    b.Property<string>("HER_Puesto");

                    b.Property<string>("HER_RolNombre");

                    b.Property<string>("HER_Telefono");

                    b.Property<string>("HER_TipoPersonal");

                    b.Property<string>("HER_Titular");

                    b.Property<string>("HER_UserName");

                    b.Property<string>("HER_UsuarioId");

                    b.HasKey("HER_InfoUsuarioId");

                    b.HasIndex("HER_AreaId");

                    b.HasIndex("HER_UsuarioId");

                    b.ToTable("HER_InfoUsuario");
                });

            modelBuilder.Entity("Hermes2018.Models.Plantilla.HER_Plantilla", b =>
                {
                    b.Property<int>("HER_PlantillaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("HER_Fecha_Registro");

                    b.Property<int>("HER_InfoUsuarioId");

                    b.Property<string>("HER_Nombre");

                    b.Property<string>("HER_Texto");

                    b.HasKey("HER_PlantillaId");

                    b.HasIndex("HER_InfoUsuarioId");

                    b.ToTable("HER_Plantilla");
                });

            modelBuilder.Entity("Hermes2018.Models.Recopilacion.HER_Recopilacion", b =>
                {
                    b.Property<int>("HER_RecopilacionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DocumentosEnviados");

                    b.Property<long>("DocumentosRecibidos");

                    b.Property<int>("HER_AreaId");

                    b.Property<long>("Usuarios");

                    b.HasKey("HER_RecopilacionId");

                    b.HasIndex("HER_AreaId");

                    b.ToTable("HER_Recopilacion");
                });

            modelBuilder.Entity("Hermes2018.Models.Rol.HER_Rol", b =>
                {
                    b.Property<int>("HER_RolId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HER_Nombre");

                    b.HasKey("HER_RolId");

                    b.ToTable("HER_Rol");
                });

            modelBuilder.Entity("Hermes2018.Models.Servicio.HER_Servicio", b =>
                {
                    b.Property<int>("HER_ServicioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HER_CreadorId");

                    b.Property<string>("HER_Nombre");

                    b.Property<int>("HER_RegionId");

                    b.HasKey("HER_ServicioId");

                    b.HasIndex("HER_CreadorId");

                    b.HasIndex("HER_RegionId");

                    b.ToTable("HER_Servicio");
                });

            modelBuilder.Entity("Hermes2018.Models.Servicio.HER_ServicioIntegrante", b =>
                {
                    b.Property<int>("HER_ServicioIntegranteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HER_IntegranteId");

                    b.Property<int>("HER_ServicioId");

                    b.HasKey("HER_ServicioIntegranteId");

                    b.HasIndex("HER_IntegranteId");

                    b.HasIndex("HER_ServicioId");

                    b.ToTable("HER_ServicioIntegrante");
                });

            modelBuilder.Entity("Hermes2018.Models.Tramite.HER_Tramite", b =>
                {
                    b.Property<int>("HER_TramiteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HER_CreadorId");

                    b.Property<string>("HER_Descripcion");

                    b.Property<int>("HER_Dias");

                    b.Property<int>("HER_Estado");

                    b.Property<DateTime>("HER_FechaActualizacion");

                    b.Property<DateTime>("HER_FechaRegistro");

                    b.Property<string>("HER_Nombre");

                    b.HasKey("HER_TramiteId");

                    b.HasIndex("HER_CreadorId");

                    b.ToTable("HER_Tramite");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Hermes2018.Models.HER_Usuario", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<bool>("HER_AceptoTerminos");

                    b.Property<bool>("HER_Aprobado");

                    b.Property<DateTime>("HER_FechaAceptoTerminos");

                    b.Property<DateTime>("HER_FechaAprobado");

                    b.Property<string>("HER_NombreCompleto");

                    b.ToTable("HER_Usuario");

                    b.HasDiscriminator().HasValue("HER_Usuario");
                });

            modelBuilder.Entity("Hermes2018.Models.Anexo.HER_AnexoArchivo", b =>
                {
                    b.HasOne("Hermes2018.Models.Anexo.HER_Anexo", "HER_Anexo")
                        .WithMany("HER_AnexoArchivos")
                        .HasForeignKey("HER_AnexoId");

                    b.HasOne("Hermes2018.Models.Anexo.HER_AnexoRuta", "HER_AnexoRuta")
                        .WithMany("HER_AnexoArchivos")
                        .HasForeignKey("HER_AnexoRutaId");
                });

            modelBuilder.Entity("Hermes2018.Models.Anexo.HER_AnexoArea", b =>
                {
                    b.HasOne("Hermes2018.Models.Anexo.HER_AnexoRuta", "HER_AnexoRuta")
                        .WithMany("HER_AnexoAreas")
                        .HasForeignKey("HER_AnexoRutaId");
                });

            modelBuilder.Entity("Hermes2018.Models.Area.HER_Area", b =>
                {
                    b.HasOne("Hermes2018.Models.Area.HER_Area", "HER_Area_Padre")
                        .WithMany()
                        .HasForeignKey("HER_Area_PadreId");

                    b.HasOne("Hermes2018.Models.Anexo.HER_AnexoArea", "HER_Logo")
                        .WithOne("HER_Area")
                        .HasForeignKey("Hermes2018.Models.Area.HER_Area", "HER_LogoId");

                    b.HasOne("Hermes2018.Models.Area.HER_Region", "HER_Region")
                        .WithMany("HER_Areas")
                        .HasForeignKey("HER_RegionId");
                });

            modelBuilder.Entity("Hermes2018.Models.Calendario.HER_CalendarioContenido", b =>
                {
                    b.HasOne("Hermes2018.Models.Calendario.HER_Calendario", "HER_Calendario")
                        .WithMany("HER_Contenido")
                        .HasForeignKey("HER_CalendarioId");
                });

            modelBuilder.Entity("Hermes2018.Models.Carpeta.HER_Carpeta", b =>
                {
                    b.HasOne("Hermes2018.Models.Carpeta.HER_Carpeta", "HER_CarpetaPadre")
                        .WithMany()
                        .HasForeignKey("HER_CarpetaPadreId");

                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_InfoUsuario")
                        .WithMany("HER_Carpetas")
                        .HasForeignKey("HER_InfoUsuarioId");
                });

            modelBuilder.Entity("Hermes2018.Models.Categoria.HER_Categoria", b =>
                {
                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_InfoUsuario")
                        .WithMany("HER_Categorias")
                        .HasForeignKey("HER_InfoUsuarioId");
                });

            modelBuilder.Entity("Hermes2018.Models.Categoria.HER_CategoriaDocumento", b =>
                {
                    b.HasOne("Hermes2018.Models.Categoria.HER_Categoria", "HER_Categoria")
                        .WithMany("HER_Documentos")
                        .HasForeignKey("HER_CategoriaId");

                    b.HasOne("Hermes2018.Models.Documento.HER_Documento", "HER_Documento")
                        .WithMany("HER_Categorias")
                        .HasForeignKey("HER_DocumentoId");
                });

            modelBuilder.Entity("Hermes2018.Models.Categoria.HER_CategoriaDocumentoBase", b =>
                {
                    b.HasOne("Hermes2018.Models.Categoria.HER_Categoria", "HER_Categoria")
                        .WithMany("HER_DocumentosBase")
                        .HasForeignKey("HER_CategoriaId");

                    b.HasOne("Hermes2018.Models.Documento.HER_DocumentoBase", "HER_DocumentoBase")
                        .WithMany("HER_Categorias")
                        .HasForeignKey("HER_DocumentoBaseId");
                });

            modelBuilder.Entity("Hermes2018.Models.Configuracion.HER_ConfiguracionUsuario", b =>
                {
                    b.HasOne("Hermes2018.Models.Configuracion.HER_Color", "HER_Color")
                        .WithMany("HER_ConfiguracionUsuarios")
                        .HasForeignKey("HER_ColorId");

                    b.HasOne("Hermes2018.Models.HER_Usuario", "HER_Usuario")
                        .WithOne("HER_Configuracion")
                        .HasForeignKey("Hermes2018.Models.Configuracion.HER_ConfiguracionUsuario", "HER_UsuarioId");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_Cancelado", b =>
                {
                    b.HasOne("Hermes2018.Models.Documento.HER_Envio", "HER_Envio")
                        .WithOne("HER_Cancelado")
                        .HasForeignKey("Hermes2018.Models.Documento.HER_Cancelado", "HER_EnvioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_Compromiso", b =>
                {
                    b.HasOne("Hermes2018.Models.Documento.HER_Recepcion", "HER_Recepcion")
                        .WithMany("HER_Compromiso")
                        .HasForeignKey("HER_RecepcionId");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_Destinatario", b =>
                {
                    b.HasOne("Hermes2018.Models.Documento.HER_DocumentoBase", "HER_DocumentoBase")
                        .WithMany("HER_Destinatarios")
                        .HasForeignKey("HER_DocumentoBaseId");

                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_UDestinatario")
                        .WithMany("HER_Destinatarios")
                        .HasForeignKey("HER_UDestinatarioId");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_Documento", b =>
                {
                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_DocumentoCreador")
                        .WithMany("HER_DocCreador")
                        .HasForeignKey("HER_DocumentoCreadorId");

                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_DocumentoTitular")
                        .WithMany("HER_DocTitular")
                        .HasForeignKey("HER_DocumentoTitularId");

                    b.HasOne("Hermes2018.Models.Documento.HER_TipoDocumento", "HER_Tipo")
                        .WithMany("HER_Documentos")
                        .HasForeignKey("HER_TipoId");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_DocumentoBase", b =>
                {
                    b.HasOne("Hermes2018.Models.Anexo.HER_Anexo", "HER_Anexo")
                        .WithOne("HER_DocumentoBase")
                        .HasForeignKey("Hermes2018.Models.Documento.HER_DocumentoBase", "HER_AnexoId");

                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_DocumentoBaseCreador")
                        .WithMany("HER_DocBaseCreador")
                        .HasForeignKey("HER_DocumentoBaseCreadorId");

                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_DocumentoBaseTitular")
                        .WithMany("HER_DocBaseTitular")
                        .HasForeignKey("HER_DocumentoBaseTitularId");

                    b.HasOne("Hermes2018.Models.Documento.HER_EstadoDocumento", "HER_Estado")
                        .WithMany("HER_DocumentosBase")
                        .HasForeignKey("HER_EstadoId");

                    b.HasOne("Hermes2018.Models.Documento.HER_Importancia", "HER_Importancia")
                        .WithMany("HER_DocumentosBase")
                        .HasForeignKey("HER_ImportanciaId");

                    b.HasOne("Hermes2018.Models.Documento.HER_TipoDocumento", "HER_Tipo")
                        .WithMany("HER_DocumentosBase")
                        .HasForeignKey("HER_TipoId");

                    b.HasOne("Hermes2018.Models.Documento.HER_Visibilidad", "HER_Visibilidad")
                        .WithMany("HER_DocumentosBase")
                        .HasForeignKey("HER_VisibilidadId");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_Envio", b =>
                {
                    b.HasOne("Hermes2018.Models.Anexo.HER_Anexo", "HER_Anexo")
                        .WithOne("HER_Envio")
                        .HasForeignKey("Hermes2018.Models.Documento.HER_Envio", "HER_AnexoId");

                    b.HasOne("Hermes2018.Models.Carpeta.HER_Carpeta", "HER_Carpeta")
                        .WithMany()
                        .HasForeignKey("HER_CarpetaId");

                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_De")
                        .WithOne("HER_EnvioUsuarioDe")
                        .HasForeignKey("Hermes2018.Models.Documento.HER_Envio", "HER_DeId");

                    b.HasOne("Hermes2018.Models.Documento.HER_Documento", "HER_Documento")
                        .WithOne("HER_Envio")
                        .HasForeignKey("Hermes2018.Models.Documento.HER_Envio", "HER_DocumentoId");

                    b.HasOne("Hermes2018.Models.Documento.HER_Envio", "HER_EnvioPadre")
                        .WithMany()
                        .HasForeignKey("HER_EnvioPadreId");

                    b.HasOne("Hermes2018.Models.Documento.HER_EstadoEnvio", "HER_EstadoEnvio")
                        .WithMany("HER_Envios")
                        .HasForeignKey("HER_EstadoEnvioId");

                    b.HasOne("Hermes2018.Models.Documento.HER_Importancia", "HER_Importancia")
                        .WithMany("HER_Envios")
                        .HasForeignKey("HER_ImportanciaId");

                    b.HasOne("Hermes2018.Models.Documento.HER_TipoEnvio", "HER_TipoEnvio")
                        .WithMany("HER_Envios")
                        .HasForeignKey("HER_TipoEnvioId");

                    b.HasOne("Hermes2018.Models.Tramite.HER_Tramite", "HER_Tramite")
                        .WithOne("HER_Envio")
                        .HasForeignKey("Hermes2018.Models.Documento.HER_Envio", "HER_TramiteId");

                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_UsuarioEnvia")
                        .WithOne("HER_EnvioUsuarioEnvia")
                        .HasForeignKey("Hermes2018.Models.Documento.HER_Envio", "HER_UsuarioEnviaId");

                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_UsuarioOrigen")
                        .WithMany()
                        .HasForeignKey("HER_UsuarioOrigenId");

                    b.HasOne("Hermes2018.Models.Documento.HER_Visibilidad", "HER_Visibilidad")
                        .WithMany("HER_Envios")
                        .HasForeignKey("HER_VisibilidadId");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_EnvioRevision", b =>
                {
                    b.HasOne("Hermes2018.Models.Documento.HER_DocumentoBase", "HER_DocumentoBase")
                        .WithOne("HER_Revision")
                        .HasForeignKey("Hermes2018.Models.Documento.HER_EnvioRevision", "HER_DocumentoBaseId");

                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_RevisionDestinatario")
                        .WithOne("HER_RevDestinatario")
                        .HasForeignKey("Hermes2018.Models.Documento.HER_EnvioRevision", "HER_RevisionDestinatarioId");

                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_RevisionRemitente")
                        .WithOne("HER_RevRemitente")
                        .HasForeignKey("Hermes2018.Models.Documento.HER_EnvioRevision", "HER_RevisionRemitenteId");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_HistorialCorreo", b =>
                {
                    b.HasOne("Hermes2018.Models.Documento.HER_Envio", "HER_Envio")
                        .WithMany("HER_HistorialCorreo")
                        .HasForeignKey("HER_EnvioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_InfoUsuario")
                        .WithMany("HER_HistorialCorreo")
                        .HasForeignKey("HER_InfoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_Recepcion", b =>
                {
                    b.HasOne("Hermes2018.Models.Carpeta.HER_Carpeta", "HER_Carpeta")
                        .WithMany()
                        .HasForeignKey("HER_CarpetaId");

                    b.HasOne("Hermes2018.Models.Documento.HER_Envio", "HER_Envio")
                        .WithMany("HER_Recepciones")
                        .HasForeignKey("HER_EnvioId");

                    b.HasOne("Hermes2018.Models.Documento.HER_EstadoEnvio", "HER_EstadoEnvio")
                        .WithMany("HER_Recepciones")
                        .HasForeignKey("HER_EstadoEnvioId");

                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_Para")
                        .WithOne("HER_RecepcionUsuarioPara")
                        .HasForeignKey("Hermes2018.Models.Documento.HER_Recepcion", "HER_ParaId");
                });

            modelBuilder.Entity("Hermes2018.Models.Documento.HER_RecepcionCategoria", b =>
                {
                    b.HasOne("Hermes2018.Models.Categoria.HER_Categoria", "HER_Categoria")
                        .WithMany("HER_Recepciones")
                        .HasForeignKey("HER_CategoriaId");

                    b.HasOne("Hermes2018.Models.Documento.HER_Recepcion", "HER_Recepcion")
                        .WithMany("HER_Categorias")
                        .HasForeignKey("HER_RecepcionId");
                });

            modelBuilder.Entity("Hermes2018.Models.Grupo.HER_Grupo", b =>
                {
                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_Creador")
                        .WithMany("HER_Grupos")
                        .HasForeignKey("HER_CreadorId");
                });

            modelBuilder.Entity("Hermes2018.Models.Grupo.HER_GrupoIntegrante", b =>
                {
                    b.HasOne("Hermes2018.Models.Grupo.HER_Grupo", "HER_Grupo")
                        .WithMany("HER_Integrantes")
                        .HasForeignKey("HER_GrupoId");

                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_Integrante")
                        .WithMany("HER_GrupoIntegrantes")
                        .HasForeignKey("HER_IntegranteId");
                });

            modelBuilder.Entity("Hermes2018.Models.HER_Delegar", b =>
                {
                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_Delegado")
                        .WithMany("HER_Titulares")
                        .HasForeignKey("HER_DelegadoId");

                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_Titular")
                        .WithMany("HER_Delegados")
                        .HasForeignKey("HER_TitularId");
                });

            modelBuilder.Entity("Hermes2018.Models.HER_InfoUsuario", b =>
                {
                    b.HasOne("Hermes2018.Models.Area.HER_Area", "HER_Area")
                        .WithMany("HER_Usuarios")
                        .HasForeignKey("HER_AreaId");

                    b.HasOne("Hermes2018.Models.HER_Usuario", "HER_Usuario")
                        .WithMany("HER_Usuarios")
                        .HasForeignKey("HER_UsuarioId");
                });

            modelBuilder.Entity("Hermes2018.Models.Plantilla.HER_Plantilla", b =>
                {
                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_InfoUsuario")
                        .WithMany("HER_Plantillas")
                        .HasForeignKey("HER_InfoUsuarioId");
                });

            modelBuilder.Entity("Hermes2018.Models.Recopilacion.HER_Recopilacion", b =>
                {
                    b.HasOne("Hermes2018.Models.Area.HER_Area", "HER_Area")
                        .WithOne("HER_Recopilacion")
                        .HasForeignKey("Hermes2018.Models.Recopilacion.HER_Recopilacion", "HER_AreaId");
                });

            modelBuilder.Entity("Hermes2018.Models.Servicio.HER_Servicio", b =>
                {
                    b.HasOne("Hermes2018.Models.HER_Usuario", "HER_Creador")
                        .WithMany("HER_Servicios")
                        .HasForeignKey("HER_CreadorId");

                    b.HasOne("Hermes2018.Models.Area.HER_Region", "HER_Region")
                        .WithMany("HER_Servicios")
                        .HasForeignKey("HER_RegionId");
                });

            modelBuilder.Entity("Hermes2018.Models.Servicio.HER_ServicioIntegrante", b =>
                {
                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_Integrante")
                        .WithMany("HER_ServicioIntegrantes")
                        .HasForeignKey("HER_IntegranteId");

                    b.HasOne("Hermes2018.Models.Servicio.HER_Servicio", "HER_Servicio")
                        .WithMany("HER_Usuarios")
                        .HasForeignKey("HER_ServicioId");
                });

            modelBuilder.Entity("Hermes2018.Models.Tramite.HER_Tramite", b =>
                {
                    b.HasOne("Hermes2018.Models.HER_InfoUsuario", "HER_Creador")
                        .WithMany("HER_Tramites")
                        .HasForeignKey("HER_CreadorId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
